/**
 * This file is part of the vehicle-api distribution (https://github.com/egodigital/hackathon/vehicle-api).
 * Copyright (c) e.GO Digital GmbH, Aachen, Germany
 *
 * This program is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, version 3.
 *
 * This program is distributed in the hope that it will be useful, but
 * WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
 * General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program. If not, see <http://www.gnu.org/licenses/>.
 */

export default {
  messages: {
    en: {
      battery_charging: 'battery charging',
      battery_charging_desc: 'Is battery charging?',
      battery_charging_values: 'yes, no',
      battery_charging_current: 'battery charging (amp)',
      battery_charging_current_desc: 'The current charging of the battery, in amp.',
      battery_charging_current_values: 'positive decimal value',
      battery_loading_capacity: 'battery loading capacity',
      battery_loading_capacity_desc: 'The loading capacity of the battery, in kW.',
      battery_loading_capacity_values: 'positive decimal value',
      battery_state_of_charge: 'battery state of charge',
      battery_state_of_charge_desc: 'The stand of the battery, in percentage.',
      battery_state_of_charge_values: 'decimal value, between 0 and 100',
      battery_total_kwh_capacity: 'battery total kwh capacity',
      battery_total_kwh_capacity_desc: 'The battery total capacity, in kW.',
      battery_total_kwh_capacity_values: 'decimal value, between 14 and 24',
      booking_simulation: 'Bookings',
      brake_fluid_level: 'brake fluid level',
      brake_fluid_level_desc: 'The level of the break fluid, in percentage.	',
      brake_fluid_level_values: 'decimal value between 0 and 100',
      calculated_remaining_distance: 'calculated remaining distance',
      calculated_remaining_distance_desc: 'The calculated remaining distance, the vehicle is able to drive.',
      calculated_remaining_distance_values: 'positive decimal value, in km',
      central_locking_system: 'central locking system',
      central_locking_system_desc: 'Is central locking system open or closed?',
      central_locking_system_values: 'open, closed',
      dialogs: {
        reset: {
          message: 'Are you sure to reset your data?',
          title: 'Reset database?',
        }
      },
      distance_to_object_back: 'distance to object back',
      distance_to_object_back_desc: 'The distance to the object on the back side.',
      distance_to_object_back_values: 'decimal value, in cm (NaN, if sensor can\'t detect any object)',
      distance_to_object_bottom: 'distance to object bottom',
      distance_to_object_bottom_desc: 'The distance to the object on the bottom.',
      distance_to_object_bottom_values: 'decimal value between 0 and 30, in cm',
      distance_to_object_front: 'distance to object front',
      distance_to_object_front_desc: 'The distance to the object on the front side.',
      distance_to_object_front_values: 'decimal value, in cm (NaN, if sensor can\'t detect any object)',
      distance_to_object_left: 'distance to object left',
      distance_to_object_left_desc: 'The distance to the object on the left side.',
      distance_to_object_left_values: 'decimal value, in cm (NaN, if sensor can\'t detect any object)',
      distance_to_object_right: 'distance to object right',
      distance_to_object_right_desc: 'The distance to the object on the right side.',
      distance_to_object_right_values: 'decimal value, in cm (NaN, if sensor can\'t detect any object)',
      distance_trip: 'distance trip',
      distance_trip_desc: 'The distance of the current trip, in km.',
      distance_trip_values: 'decimal value, in km, starting at 0',
      door_disc_front_left: 'door disc front left',
      door_disc_front_left_desc: 'Is the door disc on the front side (left) open/closed?',
      door_disc_front_left_values: 'open, closed',
      door_disc_front_right: 'door disc front right',
      door_disc_front_right_desc: 'Is the door disc on the front side (right) open/closed?',
      door_disc_front_right_values: 'open, closed',
      door_front_left: 'door front left',
      door_front_left_desc: 'Is the door on the front side (left) open/closed?',
      door_front_left_values: 'open, closed',
      door_front_right: 'door front right',
      door_front_right_desc: 'Is the door on the front side (right) open/closed?',
      door_front_right_values: 'open, closed',
      drive_mode: 'drive mode',
      drive_mode_desc: 'The current drive mode.',
      drive_mode_values: 'comfort, eco, sport',
      flash: 'flash light',
      flash_desc: 'Is flash light enabled?',
      flash_values: 'on, off',
      heated_seats: 'heated seats',
      heated_seats_desc: 'Are heated seats on/off?',
      heated_seats_values: 'on, off',
      high_beam: 'high beam',
      high_beam_desc: 'Is high beam enabled?',
      high_beam_values: 'on, off',
      infotainment: 'infotainment',
      infotainment_desc: 'Is the infotainment system enabled?',
      infotainment_values: 'on, off',
      infotainment_volume: 'infotainment volume',
      infotainment_volume_desc: 'The volumn of the infotainment system.',
      infotainment_volume_values: 'decimal value between 0 and 10',
      location: 'location',
      location_desc: 'Last tracked geo location.',
      location_values: 'Geo location has the following format: LATITUDE,LONGITUDE',
      mileage: 'mileage',
      mileage_desc: 'The mileage, in km.',
      mileage_values: 'decimal value, starting at 0',
      motor_control_lamp: 'motor control lamp',
      motor_control_lamp_desc: 'Is motor control lamp on/off?',
      motor_control_lamp_values: 'on, off',
      no: 'No',
      no_api_key: 'First set your API key in the input field on the right side of the upper menu ...',
      person_count: 'person count',
      person_count_desc: 'The number of persons currently sitting in the vehicle.',
      person_count_values: 'integer value between 0 and 4',
      power_consumption: 'power consumption',
      power_consumption_desc: 'The power consumption of the battery.',
      power_consumption_values: 'decimal value between 0 and 40',
      pulse_sensor_steering_wheel: 'pulse sensor steering wheel',
      pulse_sensor_steering_wheel_desc: 'The pulse sensor on the driver\'s wheel.',
      pulse_sensor_steering_wheel_values: 'decimal value between 0 and 300 (NaN, if sensor can\'t detect any object)',
      rain_sensor: 'rain sensor',
      rain_sensor_desc: 'Information of the rain sensor.',
      rain_sensor_values: 'rain, no_rain',
      rear_running_lights: 'rear running lights',
      rear_running_lights_desc: 'Are rear running lights on/off?',
      rear_running_lights_values: 'on, off',
      battery_health: 'battery health',
      battery_health_desc: 'The remaining capacity of the battery, in percentage.',
      battery_health_values: 'decimal value between 0 and 100',
      side_lights: 'side lights',
      side_lights_desc: 'Are side lights on/off?',
      side_lights_values: 'on, off',
      speed: 'speed',
      speed_desc: 'Current speed in km/h.',
      speed_values: 'decimal value between 0 and 200',
      stop_lights: 'stop lights',
      stop_lights_desc: 'Are stop lights on/off?',
      stop_lights_values: 'on, off',
      temperature_inside: 'temperature inside',
      temperature_inside_desc: 'The temperature inside the vehicle, in centigrade.',
      temperature_inside_values: 'integer value between -100 and 100',
      temperature_outside: 'temperature outside',
      temperature_outside_desc: 'The temperature outside the vehicle, in centigrade.',
      temperature_outside_values: 'integer value between -100 and 100',
      tire_pressure_back_left: 'tire pressure back left',
      tire_pressure_back_left_desc: 'The pressure of the tire on the back side (left), in bar.',
      tire_pressure_back_left_values: 'decimal value between 0 and 5',
      tire_pressure_back_right: 'tire pressure back right',
      tire_pressure_back_right_desc: 'The pressure of the tire on the back side (right), in bar.',
      tire_pressure_back_right_values: 'decimal value between 0 and 5',
      tire_pressure_front_left: 'tire pressure front left',
      tire_pressure_front_left_desc: 'The pressure of the tire on the front side (left), in bar.',
      tire_pressure_front_left_values: 'decimal value between 0 and 5',
      tire_pressure_front_right: 'tire pressure front right',
      tire_pressure_front_right_desc: 'The pressure of the tire on the front side (right), in bar.',
      tire_pressure_front_right_values: 'decimal value between 0 and 5',
      trunk: 'trunk',
      trunk_desc: 'Is trunk open/closed?',
      trunk_values: 'open, closed',
      turn_signal_left: 'turn signal left',
      turn_signal_left_desc: 'Is turn signal blinking on the left side?',
      turn_signal_left_values: 'on, off',
      turn_signal_right: 'turn signal right',
      turn_signal_right_desc: 'Is turn signal blinking on the right side?',
      turn_signal_right_values: 'on, off',
      vehicle_signals: 'Signals',
      warning_blinker: 'warningblinker',
      warning_blinker_desc: 'Is warning blinker enabled or not?',
      warning_blinker_values: 'on, off',
      weight: 'weight',
      weight_desc: 'The total weight of the vehicle, in kg.',
      weight_values: 'decimal value, starting at 1200',
      windshield_wipers: 'windshield wipers',
      windshield_wipers_desc: 'Are windshield wipers enabled or not?',
      windshield_wipers_values: 'on, off',
      wiping_water_level: 'wiping water level',
      wiping_water_level_desc: 'The wiping water level, in percentage.',
      wiping_water_level_values: 'decimal value between 0 and 100',
      yes: 'Yes'
    }
  }
};